(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){

var ko = require('knockout');
var components = require('ungit-components');
var programEvents = require('ungit-program-events');

components.register('refreshbutton', function() {
  return new RefreshButton();
});

function RefreshButton() {
  this.refreshingProgressBar = components.create('progressBar', { predictionMemoryKey: 'refreshing-content', temporary: true });
}
RefreshButton.prototype.refresh = function() {
  var self = this;
  programEvents.dispatch({ event: 'request-app-content-refresh' });
  this.refreshingProgressBar.start();
  setTimeout(function() { // Fake the progress bar, for now (since we don't really know who and when this message will be handled)
    self.refreshingProgressBar.stop();
  }, 100);
  return true;
}
RefreshButton.prototype.updateNode = function(parentElement) {
  ko.renderTemplate('refreshbutton', this, {}, parentElement);
}

},{"knockout":"knockout","ungit-components":"ungit-components","ungit-program-events":"ungit-program-events"}]},{},[1])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJjb21wb25lbnRzL3JlZnJlc2hidXR0b24vcmVmcmVzaGJ1dHRvbi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQ0FBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gZSh0LG4scil7ZnVuY3Rpb24gcyhvLHUpe2lmKCFuW29dKXtpZighdFtvXSl7dmFyIGE9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtpZighdSYmYSlyZXR1cm4gYShvLCEwKTtpZihpKXJldHVybiBpKG8sITApO3ZhciBmPW5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIrbytcIidcIik7dGhyb3cgZi5jb2RlPVwiTU9EVUxFX05PVF9GT1VORFwiLGZ9dmFyIGw9bltvXT17ZXhwb3J0czp7fX07dFtvXVswXS5jYWxsKGwuZXhwb3J0cyxmdW5jdGlvbihlKXt2YXIgbj10W29dWzFdW2VdO3JldHVybiBzKG4/bjplKX0sbCxsLmV4cG9ydHMsZSx0LG4scil9cmV0dXJuIG5bb10uZXhwb3J0c312YXIgaT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2Zvcih2YXIgbz0wO288ci5sZW5ndGg7bysrKXMocltvXSk7cmV0dXJuIHN9KSIsIlxudmFyIGtvID0gcmVxdWlyZSgna25vY2tvdXQnKTtcbnZhciBjb21wb25lbnRzID0gcmVxdWlyZSgndW5naXQtY29tcG9uZW50cycpO1xudmFyIHByb2dyYW1FdmVudHMgPSByZXF1aXJlKCd1bmdpdC1wcm9ncmFtLWV2ZW50cycpO1xuXG5jb21wb25lbnRzLnJlZ2lzdGVyKCdyZWZyZXNoYnV0dG9uJywgZnVuY3Rpb24oKSB7XG4gIHJldHVybiBuZXcgUmVmcmVzaEJ1dHRvbigpO1xufSk7XG5cbmZ1bmN0aW9uIFJlZnJlc2hCdXR0b24oKSB7XG4gIHRoaXMucmVmcmVzaGluZ1Byb2dyZXNzQmFyID0gY29tcG9uZW50cy5jcmVhdGUoJ3Byb2dyZXNzQmFyJywgeyBwcmVkaWN0aW9uTWVtb3J5S2V5OiAncmVmcmVzaGluZy1jb250ZW50JywgdGVtcG9yYXJ5OiB0cnVlIH0pO1xufVxuUmVmcmVzaEJ1dHRvbi5wcm90b3R5cGUucmVmcmVzaCA9IGZ1bmN0aW9uKCkge1xuICB2YXIgc2VsZiA9IHRoaXM7XG4gIHByb2dyYW1FdmVudHMuZGlzcGF0Y2goeyBldmVudDogJ3JlcXVlc3QtYXBwLWNvbnRlbnQtcmVmcmVzaCcgfSk7XG4gIHRoaXMucmVmcmVzaGluZ1Byb2dyZXNzQmFyLnN0YXJ0KCk7XG4gIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7IC8vIEZha2UgdGhlIHByb2dyZXNzIGJhciwgZm9yIG5vdyAoc2luY2Ugd2UgZG9uJ3QgcmVhbGx5IGtub3cgd2hvIGFuZCB3aGVuIHRoaXMgbWVzc2FnZSB3aWxsIGJlIGhhbmRsZWQpXG4gICAgc2VsZi5yZWZyZXNoaW5nUHJvZ3Jlc3NCYXIuc3RvcCgpO1xuICB9LCAxMDApO1xuICByZXR1cm4gdHJ1ZTtcbn1cblJlZnJlc2hCdXR0b24ucHJvdG90eXBlLnVwZGF0ZU5vZGUgPSBmdW5jdGlvbihwYXJlbnRFbGVtZW50KSB7XG4gIGtvLnJlbmRlclRlbXBsYXRlKCdyZWZyZXNoYnV0dG9uJywgdGhpcywge30sIHBhcmVudEVsZW1lbnQpO1xufVxuIl19
